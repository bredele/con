{
  "name": "bredele-each",
  "version": "0.1.2",
  "description": "Iteration utility",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/bredele/each.git"
  },
  "keywords": [
    "iteration",
    "each",
    "loop"
  ],
  "author": {
    "name": "Olivier Wietrich"
  },
  "license": "BSD",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/bredele/each/issues"
  },
  "devDependencies": {
    "mocha": "~1.17.1"
  },
  "readme": "# each\n\n  Iteration utility.\n\n## Installation\n\nwith component:\n\n    $ component install bredele/each\n\nwith nodejs:\n\n    $ npm install bredele-each\n\n## API\n\nYou'll find lots of iteration components out there (like [component-each](https://github.com/component/each)). However, `each` exposes a consistent API for both arrays and objects (the first argument is the object's key - or index for an array -).\n\n\n### each(array, fn, [scope])\n\n  Iterate an array:\n\n```js\neach(['olivier', 'bredele'], function(key, val){\n  //key is the array's index\n})\n```\n\n### each(object, fn, [scope])\n\n  Iterate an object;\n\n```js\neach(conf, function(key, val){\n  //key is the object's key\n})\n```\n\n\n## License\n\n  MIT\n",
  "homepage": "https://github.com/bredele/each",
  "_id": "bredele-each@0.1.2",
  "_from": "bredele-each@^0.1.2"
}
